#!/usr/bin/env ruby

# Usage:
# - `twig gh-open-issue`:
#   Opens a browser window for the GitHub issue, if any, for the current branch.
# - `twig gh-open-issue -b <branch>`:
#   Opens the GitHub issue, if any, for the specified branch.
#
# Author: Ron DeVera <http://rondevera.com>

require 'rubygems'
require 'twig'

class TwigGithubRepo
  def initialize
    if origin_url.empty? || username.empty? || repository.empty?
      abort_for_non_github_repo
    end

    yield(self)
  end

  def origin_url
    @origin_url ||= `git config remote.origin.url`.strip
  end

  def origin_url_parts
    @origin_url_parts ||= origin_url.split(/[\/:]/)
  end

  def username
    @username ||= origin_url_parts[-2] || ''
  end

  def repository
    @repo ||= origin_url_parts[-1].sub(/\.git$/, '') || ''
  end

  def abort_for_non_github_repo
    abort 'This does not appear to be a GitHub repository.'
  end
end

TwigGithubRepo.new do |gh_repo|
  twig = Twig.new
  twig.read_cli_options!(ARGV)
  branch_name = twig.options[:branch] || twig.current_branch_name
  issue_id = twig.get_branch_property(branch_name, 'issue')

  unless issue_id
    abort %{The branch "#{branch_name}" doesn't have an "issue" property.}
  end

  url = "https://github.com/#{gh_repo.username}/#{gh_repo.repository}"
  url << "/issues/#{issue_id}"

  puts "GitHub issue URL: #{url}"
  `which open && open #{url}`
end
