#!/usr/bin/env ruby

require 'rubygems'
require 'twig'
require 'json'
require 'net/https'
require 'uri'

def help_content
  <<-HELP

twig-gh-update
==============

Updates each branch with the latest issue status on GitHub.

Synopsis
--------

  twig gh-update

Description
-----------

  Updates each branch with the latest issue status on GitHub.

  To customize the GitHub URI prefix (e.g., for GitHub Enterprise
  installations), set GitHub options in `~/.twigconfig`:

    github-uri-prefix:     http://example-enterprise.github.com
    github-api-uri-prefix: http://example-enterprise.github.com

See also
--------

  twig-gh-open
  twig-gh-open-issue

Subcommand for Twig: <http://rondevera.github.io/twig/>
Author: Ron DeVera <http://rondevera.com>

  HELP
end

args = ARGV.dup

if args.include?('--help')
  puts help_content
  exit
end

twig = Twig.new(:read_options => true)

Twig::GithubRepo.new do |gh_repo|
  $stdout.sync = true
  print 'Getting latest states for GitHub issues...'

  issues = {}
  issues_uri_prefix = twig.options[:github_api_uri_prefix]
  issues_uri_base =
    "#{issues_uri_prefix}/repos/#{gh_repo.username}/#{gh_repo.repository}/issues"
  issues_uris = [
    URI.parse("#{issues_uri_base}?state=open"),
    URI.parse("#{issues_uri_base}?state=closed")
  ]
  user_agent = "Twig/#{Twig::VERSION} (for Git; <#{Twig::HOMEPAGE}>)"

  error = "\n\nERROR: Couldn't get open issues from GitHub." \
    "\n- API endpoints: " << issues_uris.map { |uri| "<#{uri}>" }.join(', ')

  begin
    issues_uris.each do |issues_uri|
      http = Net::HTTP.new(issues_uri.host, issues_uri.port)
      http.use_ssl = true
      http.verify_mode = OpenSSL::SSL::VERIFY_PEER
      request = Net::HTTP::Get.new(
        issues_uri.path + '?' + issues_uri.query,
        'User-Agent' => user_agent
      )
      response = http.request(request)

      if response.code.to_i == 200
        issues_data = JSON.parse(response.body)
        issues_data.each do |issue_data|
          issues[issue_data['number']] = issue_data
        end
      else
        abort error + "\n- Response: #{response.code}"
      end
    end
  rescue OpenSSL::SSL::SSLError
    abort error
  end

  twig.branches.each do |branch|
    issue_number = branch.get_property('issue').to_i
    next unless issue_number > 0

    issue = issues[issue_number]
    next unless issue

    state = issue['state']
    branch.set_property('status', state) unless state.nil? || state.empty?

    print '.'
  end

  puts
end
