#!/usr/bin/env ruby

require 'rubygems'
require 'twig'
require 'fileutils'

def help_content
  <<-HELP

twig-init-config
================

Creates a default `~/.twigconfig` file. Use `twig init` to run all setup.

Synopsis
--------

  twig init-config [--force]

Description
-----------

  Creates a default `.twigconfig` file in your home directory. Instead of
  running this directly, run `twig init` to run all setup tasks.

Options
-------

  `--force`: By default, `twig init-config` preserves the existing
  `.twigconfig` file, if any. If this option is used, the command will
  overwrite any existing config file.

See also
--------

  twig-init
  twig-init-completion

Subcommand for Twig: <http://rondevera.github.io/twig/>
Author: Ron DeVera <http://rondevera.com>

  HELP
end

args = ARGV.dup

if args.include?('--help')
  puts help_content
  exit
end

force = args.delete('--force')

config_path      = Twig::Options::CONFIG_PATH
full_config_path = File.expand_path(config_path)
config_exists    = File.exist?(full_config_path)

if config_exists && !force
  twig = Twig.new
  puts twig.format_string("The file `#{config_path}` already exists.", :color => :red)
  puts 'To overwrite it with a default file, run `twig init-config --force`.'
else
  config_template_path = File.expand_path(
    File.join(File.dirname(__FILE__), '..', 'config', 'twigconfig')
  )
  FileUtils.cp(config_template_path, full_config_path)

  if config_exists
    puts "Overwrote `#{config_path}`."
  else
    puts "Created `#{config_path}`."
  end
end

puts
puts " => You can edit `#{config_path}` to customize Twig's appearance and behavior."
puts
