#!/usr/bin/env ruby

require 'rubygems'
require 'twig'

def checkout_branch(branch_name)
  `git checkout "#{branch_name}"`
end

def help_content
  <<-HELP

twig-checkout-child
===================

Checks out a branch's child branch, if any.

Synopsis
--------

  twig checkout-child [-b|--branch <branch>]

Description
-----------

  Checks out the current branch's child branch, if any, based on the child's
  `diff-branch` property. If the current branch has multiple child branches,
  this subcommand lists all of them and prompts for a selection.

  You can use this with `twig checkout-parent` to traverse your tree of
  branches.

Options
-------

  `-b` or `--branch`: Checks out the child branch for the given branch, rather
  than the current branch.

See also
--------

  twig-checkout-parent
  twig-create-branch

Subcommand for Twig: <http://rondevera.github.io/twig/>
Author: Ron DeVera <http://rondevera.com>

  HELP
end

args = ARGV.dup

if args.include?('--help')
  puts help_content
  exit
end

twig = Twig.new(:read_options => true)
target_branch_name = twig.target_branch_name
target_branch_regexp = Regexp.new("\\A#{target_branch_name}\\z")
parent_property = Twig::Branch::PARENT_PROPERTY

twig.set_option(:property_only, parent_property.to_sym => target_branch_regexp)
child_branch_names = twig.branches

if child_branch_names.size > 1
  prompt = 'Checkout which child branch?'
  child_branch_name = Twig::Cli.prompt_with_choices(prompt, child_branch_names)

  if child_branch_name
    checkout_branch(child_branch_name)
  else
    abort 'No child branch selected.'
  end
elsif child_branch_names.size == 1
  checkout_branch(child_branch_names.first)
else
  parent_property = Twig::Branch::PARENT_PROPERTY
  abort %{The branch "#{target_branch_name}" has no known child branches.\n} \
    "To set this as parent branch for some child branch, run:\n\n" \
    "  twig #{parent_property} #{target_branch_name} -b <child branch name>"
end
